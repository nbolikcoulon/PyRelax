from matplotlib import pyplot as pltimport syssys.path.insert(1, '../SpinSystem')sys.path.insert(2, '../Misc')from Utils import exceptionsimport nucleiatom_color = {'1H': 'grey', '2H': 'k', '15N': 'b', '13C': 'orange', '19F': 'g', '31P': 'yellow'}atom_size = {'1H': 1.0, '2H': 1.0, '15N': 2.6, '13C': 2.8, '19F': 2.0, '31P': 4.0}def spin_system_geometry(nuclei_dict, save = False, figname = None):    """    plots the geometry of the spin system in a 3d axis frame.    Parameters    ----------    nuclei_dict : TYPE: dictionnary        DESCRIPTION: nuclei and associated classes.    save : TYPE: bool, optional        DESCRIPTION: whether figure is saved or not. The default is False.    figname : TYPE: str, optional        DESCRIPTION: figure name. The default is None.    Raises    ------    IndexError        DESCRIPTION: raised if coordinate vectors are not in a 3d frame.    TypeError        DESCRIPTION: raised if coordinates values are not lists or arrays.    Returns    -------    None.    """    exceptions.type_check(nuclei_dict, dict)    for v in nuclei_dict.values():        exceptions.type_check(v, nuclei.nuclei)            exceptions.type_check(save, bool)        fig = plt.figure()    ax = fig.add_subplot(111, projection='3d')        for label in nuclei_dict.keys():        coord = nuclei_dict[label].geometry.coordinates        isotope = nuclei_dict[label].isotope        ax.scatter([coord[0]], [coord[1]], [coord[2]], s = atom_size[isotope] * plt.rcParams['lines.markersize'] ** 2, color = atom_color[isotope])        ax.text(coord[0], coord[1], coord[2], label, color = atom_color[isotope])            ax.set_xlabel('x')    ax.set_ylabel('y')    ax.set_zlabel('z')    ax.set_title('Geometry of the spin system')        if save:        exceptions.type_check(figname, str)        if figname[-4:] != '.pdf':            figname += '.pdf'        plt.savefig(figname, format = 'pdf')                plt.show()    plt.close()